#!/bin/sh
set -eu

_visnip() {
	local TEMPLATE_PATH=$HOME/.vim/template
	local PATTERN_FILE=pattern.stpl

	local templates=$(find "$TEMPLATE_PATH" -mindepth 1 -maxdepth 1 -type d | awk -F/ '{print $NF}')

	cat <<- EOF

	Templates:
	$(echo "$templates" | nl)
	EOF

	local n=$(.prompt 'template' 'number or name')
	if [ -z "$n" ]; then
		.failure 'input number or name'
	fi

	expr "$n" + 1 >/dev/null 2>&1 && : ${template:=$(echo "$templates" | sed -n "${n}p" 2> /dev/null)}
	: ${template:=$(echo "$templates" | grep -x "$n")}
	: ${template:=$(echo "$templates" | grep -m1 "$n")}
	: ${template:=$n}

	if [ -d "$TEMPLATE_PATH/$template" ]; then
		local files=$(find "$TEMPLATE_PATH/$template" -name '*.stpl' -or -name 'base-*' -or -name 'file-*' -or -name 'snip-*' | awk -F'/' '{print $NF}')

		cat <<- EOF
	
		Files:
		$(echo "${files:-no template}" | nl)
		EOF

		local input=$(.prompt 'file' 'number, name, and empty is first')

		[ -z "$input" ] && file=$(echo "$files" | sed -n 1p)

		expr "$input" + 1 >/dev/null 2>&1 && : ${file:=$(echo "$files" | sed -n "${input}p" 2> /dev/null)}
		: ${file:=$(echo "$files" | grep -x "$input")}
		: ${file:=$(echo "$files" | grep -m1 "$input")}
		: ${file:=$input}
		: ${file:=$PATTERN_FILE}
	else
		local yn=$(.prompt "create new template '$template'" 'y/N')
		if [ "$yn" != 'y' ]; then
			return 0
		fi

		mkdir "$TEMPLATE_PATH/$template"

		local file=$(.prompt 'file' "$PATTERN_FILE")
		: ${file:=$PATTERN_FILE}
	fi
	
	vi "$TEMPLATE_PATH/$template/$file"
}

_visnip $@
