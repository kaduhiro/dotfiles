#!/bin/sh
set -eu

_visnip() {
	local TEMPLATE_PATH=$HOME/.vim/template
	local PATTERN_FILE=pattern.stpl

	local templates=$(find "$TEMPLATE_PATH" -mindepth 1 -maxdepth 1 -type d | awk -F/ '{print $NF}')

	echo "$templates" | nl
	printf '? template (number or name) ' && read input
	if [ -z "$input" ]; then
		false
	fi

	: ${template:=$(echo "$templates" | sed -n "${input}p" 2> /dev/null)}
	: ${template:=$(echo "$templates" | grep -x "$input")}
	: ${template:=$input}

	if [ -d "$TEMPLATE_PATH/$template" ]; then
		local files=$(find "$TEMPLATE_PATH/$template" -name '*.stpl' -or -name 'base-*' -or -name 'file-*' -or -name 'snip-*' | awk -F'/' '{print $NF}')

		echo "${files:-no template}" | nl
		printf "? file (number, name, and empty is 1) " && read input

		[ -z "$input" ] && file=$(echo "$files" | sed -n 1p)

		: ${file:=$(echo "$files" | sed -n "${input}p" 2> /dev/null)}
		: ${file:=$(echo "$files" | grep -x "$input")}
		: ${file:=$input}
		: ${file:=$PATTERN_FILE}
	else
		printf "? create new template ($template) [y/N] " && read yn
		if [ "$yn" != 'y' ]; then
			false
		fi

		mkdir "$TEMPLATE_PATH/$template"

		printf "? file ($PATTERN_FILE) " && read file
		: ${file:=$PATTERN_FILE}
	fi
	
	vi "$TEMPLATE_PATH/$template/$file"
}

_visnip $@
