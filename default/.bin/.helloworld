#!/bin/sh
set -eu

helloworld() {
	local TEMPLATES=$(printf 'helloworld nextjs gas chrome-extension' | tr ' ' '\n')
	local TEMPLATE=$(printf "$TEMPLATES" | head -n1)

	echo 'Templates:'
	local template=$(.promptls template "$TEMPLATES" $TEMPLATE)
	.success "template '$template' is set."

	local repository=$(.prompt 'repository name' 'required')
	if [ -z "$repository" ]; then
		.failure 'repository name is required.'
	fi
	if [ -d "$repository" ]; then
		.failure 'directory '$repository' already exists.'
	fi

	git clone --depth=1 "https://github.com/kaduhiro/$template" "$repository"
	.success "create directory '$repository'."

	local service=$(.prompt 'service name' $repository $repository)

	if [ "$service" != "$template" ]; then
		echo "# $service" > "$repository/README.md"
		.success "create file 'README.md'."

		for f in $(find "$repository" -name Makefile); do
			cat "$f" | sed -E "s/(SERVICE *:?= *)$template/\1$service/g" | tee "$f" > /dev/null
			.success "replace service name '$template' to '$service' in '$f'."
		done

		for f in $(find "$repository" -name package.json); do
			cat "$f" | sed -E "s/(.name.|.description.): (.)$template.,/\1: \2$service\2,/g" | tee "$f" > /dev/null
			.success "replace service name '$template' to '$service' in '$f'."
		done

		case "$template" in
		gas|chrome-extension)
			f="$repository/.env.local"
			n=$(echo $service | sed -e 's/^\(gas\|chrome-extension\)-//')
			cp "$repository/.env.local.template" "$f"
			cat "$f" | sed -E "s/^(PROJECT=)$/\1$n/g" | tee "$f" > /dev/null
			.success "create new '.env.local' in project '$n'"
			;;
		*)
			for f in $(find "$repository" -name docker-compose.yml); do
				cat "$f" | sed -E "s/([[:space:]]|\/)$template/\1$service/g" | tee "$f" > /dev/null
				.success "replace service name '$template' to '$service' in '$f'."
			done
		esac
	fi
}

helloworld $@
