#!/bin/sh
set -eu

_ghn() {
	local larges="$(find . -mindepth 1 -type f -size +50M)"
	if [ -n "$larges" ]; then
		.warning 'some files over the capacity limit ( >= 50mb )'
		printf "$larges" | nl
		.warning 'use .gitignore or .git/info/exlude for commit'
	fi

	if git status > /dev/null 2>&1; then
		.failure 'repository already exists.'
	fi

	local repo=${1:-$(basename $(pwd))}

	local yn=$(.prompt "create repository '$repo' on github.com?" 'y/N')
	if [ "$yn" = 'y' ]; then
		local origin=$(gh auth status 2>&1 \
			| awk '
				/ as / {
					gsub(/^.* as /, "");
					gsub(/ \(.*\)$/, "");
					username = $0;
				}
				/ use ssh / {
					protocol = "git@github.com:";
				}
				/ use https / {
					protocol = "https://github.com/";
				}
				END {
					printf("%s%s", protocol, username);
				}
			'
		)

		git init
		git add .
		git commit -m 'chore: initialization'
		git br -m main
		git remote add origin $origin/$repo.git

		yn=$(.prompt "push to '$repo'" 'y/N')
		if [ "$yn" = 'y' ]; then
			local visibility=private
			visibility=$(.prompt "visibility 'private' or 'public'" $visibility $visibility)

			if [ "$visibility" != 'private' ] && [ "$visibility" != 'public' ]; then
				.failure "visibility cannot be $visibility, only private or public"
			fi

			gh repo create --$visibility $repo
			git push -u origin main
		fi
  fi
}

_ghn $@
