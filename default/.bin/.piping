#!/bin/sh
set -eu

_piping() {
	local host=http://share:8888
	local src=${1:-}
	local pv=$(type pv > /dev/null 2>&1 && echo ' | pv ')

	if [ -z "$src" ]; then
		name=$(.prompt "input name" 'require')
		if [ -z "$name" ]; then
			.failure "name is required"
			exit 1
		elif [ -e "$name" ]; then
			.warning "'$name' already exists, will be override!"
		fi
		yn=$(.prompt "receive file '$name'?" 'y/N')
		if [ "$yn" = 'y' ]; then
			curl -O $host/$name
		fi
	elif [ -f "$src" ]; then
		url="$host/$(basename "$src")"
		yn=$(.prompt "send file '$src' at '$url'?" 'y/N')
		if [ "$yn" = 'y' ]; then
			cat $src $pv | curl -T - "$url"
		fi
	elif [ -d "$src" ]; then
		cmd=
		EXT=tar.gz

		dir=$(basename "$src")
		ext=$(.prompt 'tar.gz? zip?' "$EXT")
		: ${ext:=$EXT}
		case "$ext" in
		zip)
			cmd="zip -q -r - $src"
			;;
		tar\.gz)
			cmd="tar zfcp - $src"
			;;
		*)
			.failure "unkonow format '$ext'"
			exit 1
		esac

		url="$host/$dir.$ext"
		yn=$(.prompt "send directory as '$dir.$ext'? at '$url'" 'y/N')
		if [ "$yn" != 'y' ]; then
			exit 0
		fi

		$cmd $pv | curl -T - "$url"
	else
		.failure "no such resource '$src'"
		exit 1
	fi
}

_piping $@
