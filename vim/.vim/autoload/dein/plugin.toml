[[plugins]]
repo = 'kana/vim-operator-replace'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
    \ 'colorscheme': 'wombat',
    \ 'active': {
    \   'left': [
    \     [ 'mode', 'paste' ],
    \   ],
    \   'right': [
    \     [ 'lsp_errors', 'lsp_warnings', 'lsp_ok' ],
    \     [ 'percent' ],
    \     [ 'fileformat', 'fileencoding', 'filetype'  ],
    \   ],
    \ },
    \ 'component_expand': {
    \   'lsp_warnings': 'LightlineLSPWarnings',
    \   'lsp_errors':   'LightlineLSPErrors',
    \   'lsp_ok':       'LightlineLSPOk',
    \ },
    \ 'component_type': {
    \   'lsp_warnings': 'warning',
    \   'lsp_errors':   'error',
    \   'lsp_ok':       'middle',
    \ },
    \ }

function! LightlineLSPWarnings() abort
  let l:counts = lsp#get_buffer_diagnostics_counts()
  return l:counts.warning == 0 ? '' : printf('W:%d', l:counts.warning)
endfunction

function! LightlineLSPErrors() abort
  let l:counts = lsp#get_buffer_diagnostics_counts()
  return l:counts.error == 0 ? '' : printf('E:%d', l:counts.error)
endfunction

augroup lightlineAutocmd
  autocmd!
  autocmd User lsp_diagnostics_updated call lightline#update()
augroup END
'''

[[plugins]]
repo = 'mattn/vim-sonictemplate'
hook_add = '''
let g:sonictemplate_author = 'Anonymous'
let g:sonictemplate_license = 'MIT'
let g:sonictemplate_vim_template_dir = expand('~/.vim/template')
noremap <C-y><C-y> <Esc>:Template 
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
if !exists('g:tcomment_types')
  let g:tcomment_types = {}
endif

let g:tcomment_types = {
    \ 'php_surround' : "<?php %s ?>",
\ }

let g:tcomment_mapleader1 = ''
map <silent><C-_> :TComment<CR>
'''
