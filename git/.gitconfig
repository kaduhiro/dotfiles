[user]
	# name  = # git config --global user.name "name"
	# email = # git config --global user.email "email"

[color]
	ui = auto

[core]
	editor      = vim
	filemode    = false
	autocrlf    = false
	safecrlf    = true
	quotepath   = false
	commentChar = ";"

[push]
	default = current

[pull]
	rebase = false

[alias]
	st = status
	stt = status -uno
	br = branch
	sw = switch
	co = checkout
	cp = cherry-pick
	ci = commit
	cia = commit --amend
	ss = stash
	ssmv = "!f(){ [ -n \"$1\" ] && git stash store -m \"${2:-renamed}\" $(git stash drop ${1:-0} | sed 's/^.*(\\(.*\\))$/\\1/'); };f"
	diffc = diff --cached
	difff = diff --word-diff
	ll = log --stat --decorate=short --pretty=format:'%C(yellow)%h %Cgreen%cr %Cblue%cn%Cred%d %Creset%s %C(cyan)%b'
	lg = log --graph --date=short --decorate=short --pretty=format:'%C(yellow)%h %Cgreen%cd %Cblue%cn%Cred%d %Creset%s'
	lm = log --merges --pretty=format:'%C(yellow)%h %Cgreen%ci %Cblue%cn%Cred%d %Creset%s %C(cyan)%b'
	msg = !"for cmd in \
'    feat: A new feature' \
'     fix: A bug fix' \
'    docs: Documentation only changes' \
'   style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)' \
'refactor: A code change that neither fixes a bug nor adds a feature' \
'    perf: A code change that improves performance' \
'    test: Adding missing or correcting existing tests' \
'   chore: Changes to the build process or auxiliary tools and libraries such as documentation generation' \
; do echo \"$cmd\"; done"
